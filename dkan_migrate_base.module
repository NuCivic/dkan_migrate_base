<?php

/**
 * @file
 * Required module file.
 */

/**
 * Deregisters DKAN migrations.
 */
function dkan_migrate_base_migrations_disable() {
  Migration::deregisterMigration('ckan_dataset_base');
  Migration::deregisterMigration('ckan_group_base');
  Migration::deregisterMigration('ckan_resource_base');
}

/**
 * Creates resource list from CKAN site.
 *
 * CKAN has no resource_list endpiont. This function creates a file that mimics
 * that. The file created is the public file name so return not supplied.
 */
function dkan_migrate_base_create_resource_list($endpoint, $file_name = 'public://ckan-migrate-resource_list', $update = FALSE) {
  // Update if requested or the file doesn't exist.
  if ($update || (!$update && !file_exists($file_name))) {
    $resource_ids = dkan_migrate_base_create_resource_list_items($endpoint, $file_name);
    file_unmanaged_save_data(json_encode($resource_ids), $file_name, FILE_EXISTS_REPLACE);
  }
}

/**
 * Restrieves resource list from CKAN site.
 *
 * @return array
 *   List of resource uuids.
 */
function dkan_migrate_base_create_resource_list_items($endpoint, $file_name) {
  $package_list = $endpoint . 'package_list';
  $resource_ids = array('help' => t('List of resource ids for %endpoint', array('endpoint' => $endpoint)));
  $item_url     = $endpoint . 'package_show?id=:id';
  $response     = drupal_http_request($package_list);
  $json         = $response->data;
  $data         = drupal_json_decode($json);

  // Buffer for the URLs to query.
  $urls = array();

  foreach ($data['result'] as $id) {
    $dataset_show = preg_replace(array_fill(0, count($id), '/:id/'), $id, $item_url, 1);

    // Queue up the request.
    $urls[] = $dataset_show;
  }


  // Prepare the results array, it will be passed in the httprl options as a reference,
  // so that the callback function can add the return values.
  $resource_ids['result'] = array();

  // Set the httprl call options.
  $options = array(
//    'async_connect'      => FALSE,
    'domain_connections' => 25,
    'global_connections' => 50,
    'callback'           => array(
      array('function' => 'dkan_migrate_base_handle_response',),
      &$resource_ids['result']
    ),
    'global_timeout'     => 60,
    'connect_timeout'    => 30,
    'dns_timeout'        => 5,
  );

//  echo "Will retrieve " . sizeof($urls) . " URLs.\n";

  while (0 < sizeof($urls)) {
    httprl_request(array_splice($urls, 0, 1000), $options);
    httprl_send_request();

//    echo sizeof($urls) . ' ';
  }

  // Save the results.
//  echo "Got " . sizeof($resource_ids['result']) . " resource IDs.\n";

  file_unmanaged_save_data(json_encode($resource_ids), $file_name, FILE_EXISTS_REPLACE);

  return $resource_ids;
}

function dkan_migrate_base_handle_response($response, &$results) {

//  echo ".";

  // Check that the response code is OK (200).
  if ((int) $response->code !== 200) {
    echo "An error occurred [ code :: {$response->code} ]\n";
    return NULL;
  }

  $dataset_json = $response->data;
  $dataset_data = drupal_json_decode($dataset_json);
  $resources    = $dataset_data['result']['resources'];
  foreach ($resources as $key => $resource) {
    $results[] = $resource['id'];
  }

  return NULL;
}
