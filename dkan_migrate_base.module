<?php

/**
 * @file
 * Required module file.
 */

/**
 * Deregisters DKAN migrations.
 */
function dkan_migrate_base_migrations_disable() {
  Migration::deregisterMigration('ckan_dataset_base');
  Migration::deregisterMigration('ckan_group_base');
  Migration::deregisterMigration('ckan_resource_base');
}

/**
 * Creates resource list from CKAN site.
 *
 * CKAN has no resource_list endpiont. This function creates a file that mimics
 * that. The file created is the public file name so return not supplied.
 */
function dkan_migrate_base_create_resource_list($endpoint, $file_name = 'public://ckan-migrate-resource_list', $update = FALSE) {
  // Update if requested or the file doesn't exist.
  if ($update || (!$update && !file_exists($file_name))) {
    $resource_ids = dkan_migrate_base_create_resource_list_items($endpoint, $file_name);
    file_unmanaged_save_data(json_encode($resource_ids), $file_name, FILE_EXISTS_REPLACE);
  }
}

/**
 * Restrieves resource list from CKAN site.
 *
 * @return array
 *   List of resource uuids.
 */
function dkan_migrate_base_create_resource_list_items($endpoint, $file_name) {
  $package_list = $endpoint . 'package_list';
  $resource_ids = array('help' => t('List of resource ids for %endpoint', array('endpoint' => $endpoint)));
  $item_url = $endpoint . 'package_show?id=:id';
  $response = drupal_http_request($package_list);
  $json = $response->data;
  $data = json_decode($json, TRUE);
  foreach ($data['result'] as $id) {
    $dataset_show = preg_replace(array_fill(0, count($id), '/:id/'), $id, $item_url, 1);
    $resources = dkan_migrate_base_process_resource_list($dataset_show);
    var_dump($resources);
    foreach ($resources as $key => $resource) {
      $resource_ids['result'][] = $resource['id'];
    }
  }
  file_unmanaged_save_data(json_encode($resource_ids), $file_name, FILE_EXISTS_REPLACE);
  return $resource_ids;
}

/**
 * Fetches resources from each dataset.
 *
 * @param $dataset_show string
 *   Endpoint URL for the dataset.
 *
 * @return array
 *   Resources attached to dataset.
 */
function dkan_migrate_base_process_resource_list($dataset_show) {
  var_dump($dataset_show);
  $dataset_response = drupal_http_request($dataset_show);
  var_dump($dataset_response);
  $dataset_json = $dataset_response->data;
  var_dump($dataset_json);
  $dataset_data = json_decode($dataset_json, TRUE);
  var_dump($dataset_data);
  $resources = $dataset_data['result']['resources'];
  return $resources;
}
